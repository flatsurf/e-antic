name: Test
on:
  push: { branches: [ "master" ] }
  pull_request: { branches: [ "master" ] }

jobs:
  test-libeantic:
    runs-on: ${{ matrix.on }}
    strategy:
      matrix:
        include:
        - on: ubuntu-20.04
          libflint: 2.6
          target: check
        - on: ubuntu-20.04
          libflint: 2.7
          target: check
        - on: ubuntu-20.04
          libflint: 2.7
          target: check-valgrind
        - on: ubuntu-20.04
          environment: binder
          target: check
        - on: macos-10.15
          libflint: 2.6
          target: check
        - on: macos-10.15
          libflint: 2.7
          target: check
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - name: install valgrind and libc debug symbols
        run: |
          sudo apt update
          sudo apt install libc6-dbg valgrind
        if: ${{ matrix.target == 'check-valgrind' }}
      - name: build flags
        id: flags
        run: |
          echo "::set-output name=configure::"`[[ ${{ runner.os }} == "Linux" ]] && echo "--with-version-script"`
      - uses: conda-incubator/setup-miniconda@v2
        with: { mamba-version: "*", channels: "flatsurf,conda-forge", channel-priority: true }
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f libeantic/environment.yml
          mamba install libflint=${{ matrix.libflint }}
          conda list
        if: ${{ matrix.environment != 'binder' }}
      - name: Create binder environment
        shell: bash -l {0}
        run: |
          wget -O repo2docker.yml https://github.com/jupyterhub/repo2docker/raw/main/repo2docker/buildpacks/conda/environment.yml
          mamba install -n test --quiet -y pytest pytest-xdist byexample
          mamba env update -n test --quiet -f repo2docker.yml
          mamba env update -n test --quiet -f binder/environment.yml
          conda list
        if: ${{ matrix.environment == 'binder' }}
      - name: make ${{ matrix.target }}
        shell: bash -l {0}
        run: |
          echo "::group::bootstrap"
          ./bootstrap

          echo "::group::configure"
          cd libeantic
          export CFLAGS="$CFLAGS -UNDEBUG"
          export CXXFLAGS="$CXXFLAGS -UNDEBUG"
          ./configure --without-benchmark ${{ steps.flags.outputs.configure }} --without-doc

          echo "::group::make"
          make V=1

          echo "::group::make ${{ matrix.target }}"
          make V=1 ${{ matrix.target }}
      - uses: flatsurf/actions/show-logs@main
        if: ${{ always() }}
  test-pyeantic:
    runs-on: ${{ matrix.on }}
    strategy:
      matrix:
        include:
          - on: ubuntu-20.04
            python: "3.6"
            target: check
          - on: macos-10.15
            python: "3.6"
            target: check
          - on: ubuntu-20.04
            python: "3.7"
            target: check
          - on: macos-10.15
            python: "3.7"
            target: check
          - on: ubuntu-20.04
            python: "3.8"
            target: check
          - on: macos-10.15
            python: "3.8"
            target: check
          - on: ubuntu-20.04
            python: "3.9"
            target: check
          - on: macos-10.15
            python: "3.9"
            target: check
          - on: ubuntu-20.04
            python: "3.9"
            target: check-valgrind
          - on: ubuntu-20.04
            environment: binder
            target: check
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - name: install valgrind and libc debug symbols
        run: |
          sudo apt update
          sudo apt install libc6-dbg valgrind
        if: ${{ matrix.target == 'check-valgrind' }}
      - name: build flags
        id: flags
        run: |
          echo "::set-output name=configure::"`[[ ${{ runner.os }} == "Linux" ]] && echo "--with-version-script"``[[ '${{ matrix.environment }}' == "binder" ]] && echo "--without-sage"`
      - uses: conda-incubator/setup-miniconda@v2
        with: { mamba-version: "*", channels: "flatsurf,conda-forge", python-version: "${{ matrix.python }}", channel-priority: true }
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f libeantic/environment.yml
          mamba env update --quiet -n test -f pyeantic/environment.yml
          conda list
        if: ${{ matrix.environment != 'binder' }}
      - name: Create binder environment
        shell: bash -l {0}
        run: |
          wget -O repo2docker.yml https://github.com/jupyterhub/repo2docker/raw/main/repo2docker/buildpacks/conda/environment.yml
          mamba install -n test --quiet -y pytest pytest-xdist byexample
          mamba env update -n test --quiet -f repo2docker.yml
          mamba env update -n test --quiet -f binder/environment.yml
          conda list
        if: ${{ matrix.environment == 'binder' }}
      - name: make ${{ matrix.target }}
        shell: bash -l {0}
        run: |
          echo "::group::bootstrap"
          ./bootstrap

          echo "::group::configure"
          export CXXFLAGS="$CXXFLAGS -UNDEBUG"
          ./configure --without-benchmark ${{ steps.flags.outputs.configure }} --without-doc

          echo "::group::make"
          make V=1

          echo "::group::make ${{ matrix.target }}"
          cd pyeantic
          make V=1 ${{ matrix.target }}
      - uses: flatsurf/actions/show-logs@main
        if: ${{ always() }}
  distcheck:
    runs-on: ${{ matrix.on }}
    strategy:
      matrix:
        on:
          - ubuntu-20.04
          # standardese 0.6.0 has not been released for macOS yet.
          # - macos-10.15
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - uses: conda-incubator/setup-miniconda@v2
        with: { mamba-version: "*", channels: "flatsurf,conda-forge", channel-priority: true }
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f libeantic/environment.yml
          mamba env update --quiet -n test -f pyeantic/environment.yml
          mamba env update --quiet -n test -f doc/environment.yml
          conda list
      - name: make distcheck
        shell: bash -l {0}
        run: |
          echo "::group::bootstrap"
          ./bootstrap

          echo "::group::configure"
          ./configure

          echo "::group::make distcheck"
          EXTRA_STANDARDESE_FLAGS=-I${CONDA_PREFIX}/include make distcheck
      - uses: flatsurf/actions/show-logs@main
        if: ${{ always() }}

env:
  MAKEFLAGS: -j2
