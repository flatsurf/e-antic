# This file controls which symbols libeantic exports on Linux.
LIBEANTICXX_1.0.0 {
  global:
    extern "C++" {
      "eantic::renf_class::~renf_class()";
      "eantic::renf_class::make()";
      "eantic::renf_class::make(renf const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)";
      "eantic::renf_class::make(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)";
      "TODO: destructor";
      "eantic::renf_class::degree() const";
      "eantic::renf_class::zero() const";
      "eantic::renf_class::one() const";
      "eantic::renf_class::gen() const";
      "eantic::operator==(eantic::renf_class const&, eantic::renf_class const&)";
      "eantic::renf_class::set_pword(std::istream&) const";
      "eantic::renf_class::get_pword(std::istream&)";
      "eantic::renf_class::to_string[abi:cxx11]() const";
      "eantic::operator<<(std::ostream&, eantic::renf_class const&)";
      "eantic::renf_class::set_istream(std::istream&) const";
      "eantic::renf_elem_class::renf_elem_class()";
      "eantic::renf_elem_class::renf_elem_class(eantic::renf_elem_class const&)";
      "eantic::renf_elem_class::renf_elem_class(eantic::renf_elem_class&&)";
      "eantic::renf_elem_class::renf_elem_class(int)";
      "eantic::renf_elem_class::renf_elem_class(unsigned int)";
      "eantic::renf_elem_class::renf_elem_class(long)";
      "eantic::renf_elem_class::renf_elem_class(unsigned long)";
      "eantic::renf_elem_class::renf_elem_class(long long)";
      "eantic::renf_elem_class::renf_elem_class(unsigned long long)";
      "eantic::renf_elem_class::renf_elem_class(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::renf_elem_class::renf_elem_class(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::renf_elem_class::renf_elem_class(fmpq const*)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, eantic::renf_elem_class const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, int)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, unsigned int)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, long)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, unsigned long)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, long long)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, unsigned long long)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, __gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, fmpq const*)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, std::vector<int, std::allocator<int> > const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, std::vector<unsigned int, std::allocator<unsigned int> > const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, std::vector<long, std::allocator<long> > const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, std::vector<unsigned long, std::allocator<unsigned long> > const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, std::vector<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, std::allocator<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> > > const&)";
      "eantic::renf_elem_class::renf_elem_class(std::shared_ptr<eantic::renf_class const>, std::vector<__gmp_expr<__mpq_struct [1], __mpq_struct [1]>, std::allocator<__gmp_expr<__mpq_struct [1], __mpq_struct [1]> > > const&)";
      "eantic::renf_elem_class::~renf_elem_class()";
      "eantic::renf_elem_class::operator=(eantic::renf_elem_class const&)";
      "eantic::renf_elem_class::operator=(eantic::renf_elem_class&&)";
      "eantic::renf_elem_class::is_zero() const";
      "eantic::renf_elem_class::is_one() const";
      "eantic::renf_elem_class::is_integer() const";
      "eantic::renf_elem_class::is_rational() const";
      "eantic::renf_elem_class::renf_elem_t() const";
      "eantic::renf_elem_class::num() const";
      "eantic::renf_elem_class::den() const";
      "eantic::renf_elem_class::operator __gmp_expr<__mpq_struct [1], __mpq_struct [1]>() const";
      "eantic::renf_elem_class::num_vector() const";
      "eantic::renf_elem_class::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const";
      "eantic::renf_elem_class::to_string[abi:cxx11](int) const";
      "eantic::renf_elem_class::num_content() const";
      "eantic::renf_elem_class::floor() const";
      "eantic::renf_elem_class::ceil() const";
      "eantic::renf_elem_class::sgn() const";
      "eantic::renf_elem_class::operator double() const";
      "eantic::renf_elem_class::operator-() const";
      "eantic::renf_elem_class::operator+() const";
      "eantic::renf_elem_class::operator bool() const";
      "eantic::renf_elem_class::operator+=(eantic::renf_elem_class const&)";
      "eantic::renf_elem_class::operator-=(eantic::renf_elem_class const&)";
      "eantic::renf_elem_class::operator*=(eantic::renf_elem_class const&)";
      "eantic::renf_elem_class::operator/=(eantic::renf_elem_class const&)";
      "eantic::operator==(eantic::renf_elem_class const&, eantic::renf_elem_class const&)";
      "eantic::operator<(eantic::renf_elem_class const&, eantic::renf_elem_class const&)";
      "eantic::renf_elem_class::floordiv(eantic::renf_elem_class const&) const";
      "eantic::renf_elem_class::pow(int) const";
      "eantic::renf_elem_class::operator+=(int)";
      "eantic::renf_elem_class::operator-=(int)";
      "eantic::renf_elem_class::operator*=(int)";
      "eantic::renf_elem_class::operator/=(int)";
      "eantic::operator==(eantic::renf_elem_class const&, int)";
      "eantic::operator<(eantic::renf_elem_class const&, int)";
      "eantic::operator>(eantic::renf_elem_class const&, int)";
      "eantic::renf_elem_class::operator+=(unsigned int)";
      "eantic::renf_elem_class::operator-=(unsigned int)";
      "eantic::renf_elem_class::operator*=(unsigned int)";
      "eantic::renf_elem_class::operator/=(unsigned int)";
      "eantic::operator==(eantic::renf_elem_class const&, unsigned int)";
      "eantic::operator<(eantic::renf_elem_class const&, unsigned int)";
      "eantic::operator>(eantic::renf_elem_class const&, unsigned int)";
      "eantic::renf_elem_class::operator+=(long)";
      "eantic::renf_elem_class::operator-=(long)";
      "eantic::renf_elem_class::operator*=(long)";
      "eantic::renf_elem_class::operator/=(long)";
      "eantic::operator==(eantic::renf_elem_class const&, long)";
      "eantic::operator<(eantic::renf_elem_class const&, long)";
      "eantic::operator>(eantic::renf_elem_class const&, long)";
      "eantic::renf_elem_class::operator+=(unsigned long)";
      "eantic::renf_elem_class::operator-=(unsigned long)";
      "eantic::renf_elem_class::operator*=(unsigned long)";
      "eantic::renf_elem_class::operator/=(unsigned long)";
      "eantic::operator==(eantic::renf_elem_class const&, unsigned long)";
      "eantic::operator<(eantic::renf_elem_class const&, unsigned long)";
      "eantic::operator>(eantic::renf_elem_class const&, unsigned long)";
      "eantic::renf_elem_class::operator+=(long long)";
      "eantic::renf_elem_class::operator-=(long long)";
      "eantic::renf_elem_class::operator*=(long long)";
      "eantic::renf_elem_class::operator/=(long long)";
      "eantic::operator==(eantic::renf_elem_class const&, long long)";
      "eantic::operator<(eantic::renf_elem_class const&, long long)";
      "eantic::operator>(eantic::renf_elem_class const&, long long)";
      "eantic::renf_elem_class::operator+=(unsigned long long)";
      "eantic::renf_elem_class::operator-=(unsigned long long)";
      "eantic::renf_elem_class::operator*=(unsigned long long)";
      "eantic::renf_elem_class::operator/=(unsigned long long)";
      "eantic::operator==(eantic::renf_elem_class const&, unsigned long long)";
      "eantic::operator<(eantic::renf_elem_class const&, unsigned long long)";
      "eantic::operator>(eantic::renf_elem_class const&, unsigned long long)";
      "eantic::renf_elem_class::operator+=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::renf_elem_class::operator-=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::renf_elem_class::operator*=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::renf_elem_class::operator/=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::operator==(eantic::renf_elem_class const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::operator<(eantic::renf_elem_class const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::operator>(eantic::renf_elem_class const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)";
      "eantic::renf_elem_class::operator+=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::renf_elem_class::operator-=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::renf_elem_class::operator*=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::renf_elem_class::operator/=(__gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::operator==(eantic::renf_elem_class const&, __gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::operator<(eantic::renf_elem_class const&, __gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::operator>(eantic::renf_elem_class const&, __gmp_expr<__mpq_struct [1], __mpq_struct [1]> const&)";
      "eantic::renf_elem_class::get_str[abi:cxx11](int) const";
      "eantic::renf_elem_class::get_renf_elem() const";
      "eantic::renf_elem_class::get_den() const";
      "eantic::renf_elem_class::get_num() const";
      "eantic::renf_elem_class::get_rational() const";
      "eantic::renf_elem_class::get_num_vector() const";
      "eantic::renf_elem_class::get_d() const";
      "eantic::operator<<(std::ostream&, eantic::renf_elem_class const&)";
      "eantic::operator>>(std::istream&, eantic::renf_elem_class&)";
      "eantic::ceil(eantic::renf_elem_class const&)";
      "eantic::floor(eantic::renf_elem_class const&)";
      "eantic::pow(eantic::renf_elem_class const&, int)";
      "std::hash<eantic::renf_class>::operator()(eantic::renf_class const&) const";
      "std::hash<eantic::renf_elem_class>::operator()(eantic::renf_elem_class const&) const";
    };
  local: *;
};
