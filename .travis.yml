language: c
cache: ccache
matrix:
  - compiler: gcc
    env: CC=gcc
         CXX=g++
         FLINT_VERSION=2.5.2
         ARB_VERSION=2.16.0
  - compiler: gcc
    env: CC=gcc
         CXX=g++
         FLINT_VERSION=2.7.1
         ARB_VERSION=2.19.0
  - compiler: clang
    env: CC=clang
         CXX=clang++
         LD_LIBRARY_PATH=$PREFIX/lib:/usr/local/clang/lib
         FLINT_VERSION=2.5.2
         ARB_VERSION=2.16.0
  - compiler: clang
    env: CC=clang
         CXX=clang++
         LD_LIBRARY_PATH=$PREFIX/lib:/usr/local/clang/lib
         FLINT_VERSION=2.7.1
         ARB_VERSION=2.19.0

env:
  PREFIX=/usr/local
  MAKE="make -j2"
install:
  - sudo apt-get install libgmp-dev libmpfr-dev valgrind
  # set local directory and check name resolution
  - mkdir local
  # build flint
  - wget http://flintlib.org/flint-${FLINT_VERSION}.tar.gz
  - tar xf flint-${FLINT_VERSION}.tar.gz
  - cd flint-${FLINT_VERSION}
  - ./configure --prefix=${PREFIX} && make && sudo make install
  - cd ..
  # build arb
  - wget https://github.com/fredrik-johansson/arb/archive/${ARB_VERSION}.tar.gz
  - tar xf ${ARB_VERSION}.tar.gz
  - cd arb-${ARB_VERSION}
  - ./configure --prefix=${PREFIX} --with-flint=${PREFIX} && make && sudo make install
  - cd ..
  # check linking of installation
  - ldd ${PREFIX}/lib/libflint.so
  - ldd ${PREFIX}/lib/libarb.so
  # build e-antic
  - ./bootstrap.sh
  - ./configure CFLAGS="-I${PREFIX}/include" CPPFLAGS="-I${PREFIX}/include" LDFLAGS="-L${PREFIX}/lib" --enable-valgrind
  - cat config.log
  - make
  - ldd .libs/libeantic.so

script:
  - V=1 make check VERBOSE=1
  - if [ "$CC" != clang ]; then V=1 make check-valgrind VERBOSE=1; fi
  - V=1 make distcheck DISTCHECK_CONFIGURE_FLAGS="CFLAGS=\"-I${PREFIX}/include\" CPPFLAGS=\"-I${PREFIX}/include\" LDFLAGS=\"-L${PREFIX}/lib\""
